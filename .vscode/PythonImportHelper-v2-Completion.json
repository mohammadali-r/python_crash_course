[
    {
        "label": "color",
        "kind": 5,
        "importPath": "conditionals",
        "description": "conditionals",
        "peekOfCode": "color = \"\"\n# if\nif color == \"red\":\n    print(\"Color is red\")\nelif color == \"blue\":\n    print(\"Color is blue\")\nelse:\n    print(\"Color is green\")\n# match-case, introduced in v3.10\nmatch color:",
        "detail": "conditionals",
        "documentation": {}
    },
    {
        "label": "name",
        "kind": 5,
        "importPath": "data_type",
        "description": "data_type",
        "peekOfCode": "name = \"MohammadAli\"\n# int\nage = 27\n# boolean\nis_male = True\n# float\npi = 3.14\nprint(type(name))\nprint(type(age))\nprint(type(is_male))",
        "detail": "data_type",
        "documentation": {}
    },
    {
        "label": "age",
        "kind": 5,
        "importPath": "data_type",
        "description": "data_type",
        "peekOfCode": "age = 27\n# boolean\nis_male = True\n# float\npi = 3.14\nprint(type(name))\nprint(type(age))\nprint(type(is_male))\nprint(type(pi))",
        "detail": "data_type",
        "documentation": {}
    },
    {
        "label": "is_male",
        "kind": 5,
        "importPath": "data_type",
        "description": "data_type",
        "peekOfCode": "is_male = True\n# float\npi = 3.14\nprint(type(name))\nprint(type(age))\nprint(type(is_male))\nprint(type(pi))",
        "detail": "data_type",
        "documentation": {}
    },
    {
        "label": "pi",
        "kind": 5,
        "importPath": "data_type",
        "description": "data_type",
        "peekOfCode": "pi = 3.14\nprint(type(name))\nprint(type(age))\nprint(type(is_male))\nprint(type(pi))",
        "detail": "data_type",
        "documentation": {}
    },
    {
        "label": "greet",
        "kind": 2,
        "importPath": "function",
        "description": "function",
        "peekOfCode": "def greet(name=\"MohammadAli\"):\n    print(\"Hello \" + name)\ngreet()\ngreet(\"anne\")\ndef hello_world():\n    print(\"Hello world!\")\nhello_world()\ndef operations(x, y):\n    return (x + y, x - y, x * y, x / y)\na = int(input(\"Enter the first number: \\n\"))",
        "detail": "function",
        "documentation": {}
    },
    {
        "label": "hello_world",
        "kind": 2,
        "importPath": "function",
        "description": "function",
        "peekOfCode": "def hello_world():\n    print(\"Hello world!\")\nhello_world()\ndef operations(x, y):\n    return (x + y, x - y, x * y, x / y)\na = int(input(\"Enter the first number: \\n\"))\nb = int(input(\"Enter the second number: \\n\"))\nadd, subtraction, multiply, divide = operations(a, b)\nprint(\n    \" ----- Result ----- \\n\"",
        "detail": "function",
        "documentation": {}
    },
    {
        "label": "operations",
        "kind": 2,
        "importPath": "function",
        "description": "function",
        "peekOfCode": "def operations(x, y):\n    return (x + y, x - y, x * y, x / y)\na = int(input(\"Enter the first number: \\n\"))\nb = int(input(\"Enter the second number: \\n\"))\nadd, subtraction, multiply, divide = operations(a, b)\nprint(\n    \" ----- Result ----- \\n\"\n    + \"Add: \"\n    + str(add)\n    + \"\\n\"",
        "detail": "function",
        "documentation": {}
    },
    {
        "label": "a",
        "kind": 5,
        "importPath": "function",
        "description": "function",
        "peekOfCode": "a = int(input(\"Enter the first number: \\n\"))\nb = int(input(\"Enter the second number: \\n\"))\nadd, subtraction, multiply, divide = operations(a, b)\nprint(\n    \" ----- Result ----- \\n\"\n    + \"Add: \"\n    + str(add)\n    + \"\\n\"\n    + \"Subtraction: \"\n    + str(subtraction)",
        "detail": "function",
        "documentation": {}
    },
    {
        "label": "b",
        "kind": 5,
        "importPath": "function",
        "description": "function",
        "peekOfCode": "b = int(input(\"Enter the second number: \\n\"))\nadd, subtraction, multiply, divide = operations(a, b)\nprint(\n    \" ----- Result ----- \\n\"\n    + \"Add: \"\n    + str(add)\n    + \"\\n\"\n    + \"Subtraction: \"\n    + str(subtraction)\n    + \"\\n\"",
        "detail": "function",
        "documentation": {}
    },
    {
        "label": "name",
        "kind": 5,
        "importPath": "inputs",
        "description": "inputs",
        "peekOfCode": "name = input()\nprint(\"Hello \" + name)\nname = input(\"Enter your name:\\n\")\nprint(\"Hello \" + name)\n# inputs are string and for this case convert that to int\nbirth_date = int(input(\"Enter your birth date:\\n\"))\nprint(\"Your age:\", 2024 - birth_date)",
        "detail": "inputs",
        "documentation": {}
    },
    {
        "label": "name",
        "kind": 5,
        "importPath": "inputs",
        "description": "inputs",
        "peekOfCode": "name = input(\"Enter your name:\\n\")\nprint(\"Hello \" + name)\n# inputs are string and for this case convert that to int\nbirth_date = int(input(\"Enter your birth date:\\n\"))\nprint(\"Your age:\", 2024 - birth_date)",
        "detail": "inputs",
        "documentation": {}
    },
    {
        "label": "birth_date",
        "kind": 5,
        "importPath": "inputs",
        "description": "inputs",
        "peekOfCode": "birth_date = int(input(\"Enter your birth date:\\n\"))\nprint(\"Your age:\", 2024 - birth_date)",
        "detail": "inputs",
        "documentation": {}
    },
    {
        "label": "fruits",
        "kind": 5,
        "importPath": "lists",
        "description": "lists",
        "peekOfCode": "fruits = [\"apple\", \"orange\", \"banana\", \"cherry\", \"peach\", \"lime\", \"pomegranate\"]\nnames = [\n    \"MohammadAli\",\n    \"maryam\",\n    \"mahdi\",\n    \"arash\",\n    \"ahmad\",\n    \"sara\"\n]\npet = \"cat\"",
        "detail": "lists",
        "documentation": {}
    },
    {
        "label": "names",
        "kind": 5,
        "importPath": "lists",
        "description": "lists",
        "peekOfCode": "names = [\n    \"MohammadAli\",\n    \"maryam\",\n    \"mahdi\",\n    \"arash\",\n    \"ahmad\",\n    \"sara\"\n]\npet = \"cat\"\nprint(fruits)",
        "detail": "lists",
        "documentation": {}
    },
    {
        "label": "pet",
        "kind": 5,
        "importPath": "lists",
        "description": "lists",
        "peekOfCode": "pet = \"cat\"\nprint(fruits)\nprint(names)\nprint(fruits[1])\nprint(fruits[-1])\nnames[-2] = \"jack\"\nprint(names)\nprint(fruits[0:3])\nprint(fruits[1:3])\nprint(fruits[0:])",
        "detail": "lists",
        "documentation": {}
    },
    {
        "label": "names[-2]",
        "kind": 5,
        "importPath": "lists",
        "description": "lists",
        "peekOfCode": "names[-2] = \"jack\"\nprint(names)\nprint(fruits[0:3])\nprint(fruits[1:3])\nprint(fruits[0:])\nprint(fruits[:2])\nprint(fruits[:])\nprint(pet[1])\nprint(len(fruits))\nnew_fruits = fruits[4:]",
        "detail": "lists",
        "documentation": {}
    },
    {
        "label": "new_fruits",
        "kind": 5,
        "importPath": "lists",
        "description": "lists",
        "peekOfCode": "new_fruits = fruits[4:]\nprint(new_fruits)",
        "detail": "lists",
        "documentation": {}
    },
    {
        "label": "fruits",
        "kind": 5,
        "importPath": "loops",
        "description": "loops",
        "peekOfCode": "fruits = [\"apple\", \"orange\", \"banana\", \"cherry\", \"peach\"]\nfor i in fruits:\n    print(i)\n# while loop\ncount = 0\nwhile count <= 10:\n    print(count)\n    count += 1",
        "detail": "loops",
        "documentation": {}
    },
    {
        "label": "count",
        "kind": 5,
        "importPath": "loops",
        "description": "loops",
        "peekOfCode": "count = 0\nwhile count <= 10:\n    print(count)\n    count += 1",
        "detail": "loops",
        "documentation": {}
    },
    {
        "label": "name",
        "kind": 5,
        "importPath": "variables",
        "description": "variables",
        "peekOfCode": "name = \"MohammadAli\"\nrole = \"QA\"\nage = 27\nis_male = True\nbirth_date = 1997\nmoney = None  # null\nprint(name)\nprint(role, age)\nprint(is_male)\n# get vars type",
        "detail": "variables",
        "documentation": {}
    },
    {
        "label": "role",
        "kind": 5,
        "importPath": "variables",
        "description": "variables",
        "peekOfCode": "role = \"QA\"\nage = 27\nis_male = True\nbirth_date = 1997\nmoney = None  # null\nprint(name)\nprint(role, age)\nprint(is_male)\n# get vars type\nprint(type(age), type(name))",
        "detail": "variables",
        "documentation": {}
    },
    {
        "label": "age",
        "kind": 5,
        "importPath": "variables",
        "description": "variables",
        "peekOfCode": "age = 27\nis_male = True\nbirth_date = 1997\nmoney = None  # null\nprint(name)\nprint(role, age)\nprint(is_male)\n# get vars type\nprint(type(age), type(name))\nprint(type(is_male))",
        "detail": "variables",
        "documentation": {}
    },
    {
        "label": "is_male",
        "kind": 5,
        "importPath": "variables",
        "description": "variables",
        "peekOfCode": "is_male = True\nbirth_date = 1997\nmoney = None  # null\nprint(name)\nprint(role, age)\nprint(is_male)\n# get vars type\nprint(type(age), type(name))\nprint(type(is_male))\nprint(\"Your age:\", 2024 - birth_date)",
        "detail": "variables",
        "documentation": {}
    },
    {
        "label": "birth_date",
        "kind": 5,
        "importPath": "variables",
        "description": "variables",
        "peekOfCode": "birth_date = 1997\nmoney = None  # null\nprint(name)\nprint(role, age)\nprint(is_male)\n# get vars type\nprint(type(age), type(name))\nprint(type(is_male))\nprint(\"Your age:\", 2024 - birth_date)\nprint(type(money))",
        "detail": "variables",
        "documentation": {}
    },
    {
        "label": "money",
        "kind": 5,
        "importPath": "variables",
        "description": "variables",
        "peekOfCode": "money = None  # null\nprint(name)\nprint(role, age)\nprint(is_male)\n# get vars type\nprint(type(age), type(name))\nprint(type(is_male))\nprint(\"Your age:\", 2024 - birth_date)\nprint(type(money))",
        "detail": "variables",
        "documentation": {}
    }
]